spring:
  thymeleaf:
    cache: false # 이전 데이터 캐싱되어 수정 안될 수 있음
  datasource:
    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1 # memory에 저장 속도는 빠른데 서버 재시작 시 데이터 날아감
    driverClassName: org.h2.Driver # 인터넷 검색
    username: sa
    password:
  h2:
    console:
      enabled: true # 자체 콘솔 존재
      path: /h2
  sql:
    init: # 서버가 켜질 때 들어갈 데이터
      encoding: UTF-8
#      schema-locations: classpath:h2/schema.sql
      dataLocations: classpath:sql/data.sql
      mode: always
  jpa: 
    defer-datasource-initialization: true # 위의 init에서의 데이터가 들어갈 때까지 기다림
    open-in-view: false # 트랜잭션 범위 밖에서 영속성 컨텍스트를 유지할지 여부
    database-platform: org.hibernate.dialect.H2Dialect # 어느 형식의 DB를 쓸 지 결정
    hibernate: # 
      ddl-auto: create # create-drop, update, validate, none / # 
      naming: # 이름 전략
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: true # sql 보이게
    properties:
      hibernate:
        format_sql: true # sql 정렬 설정
        use_sql_comments: true
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB